#version 450
#extension GL_EXT_mesh_shader : require
#extension GL_EXT_buffer_reference : require
#extension GL_EXT_scalar_block_layout : require

// Since we did not enable vertexPipelineStoresAndAtomics, we must mark everything readonly.
layout(scalar, buffer_reference, buffer_reference_align = 8) readonly buffer Position
{
    vec3 positions[];
};

layout(push_constant) uniform Registers
{
    Position verts;
} constants;


layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(triangles, max_vertices = 3, max_primitives = 1) out;

void main()
{
  uint vertexCount = 3;
  uint triangleCount = 1;
  SetMeshOutputsEXT(vertexCount, triangleCount);
  gl_MeshVerticesEXT[0].gl_Position = vec4( constants.verts.positions[0], 1);
  gl_MeshVerticesEXT[1].gl_Position = vec4( constants.verts.positions[1], 1);
  gl_MeshVerticesEXT[2].gl_Position = vec4( constants.verts.positions[2], 1);
  gl_PrimitiveTriangleIndicesEXT[0] =  uvec3(0, 1, 2);
}